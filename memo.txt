콘솔이나 프로그램에서 null이 출력된다면
그건 없거나 존재하지 않는다는것이다.




const toDoForm = document.querySelector(".js-toDoForm"),
  toDoInput = toDoForm.querySelector("input"),
  toDoList = document.querySelector(".js-toDoList");
//writing no.1

const TODOS_LS = "toDos";
// writing no.4
// const TODOS_LS = "toDos"는
// 단지 문자열을 유지하는 것입니다.
// "ToDos"는 문자열입니다.
// ToDos는 할일 배열을 보유하는 변수입니다.

const toDos = [];

function saveTodos() {
  localStorage.setItem(TODOS_LS, JSON.stringify(toDos));
  //localStorage에는 js의  데이터를 저장 할 수가 없다. string으로 저장할려고 한다
  //JSON.stringify는  js의 object를 string으로 바꿔줌
}

function paintToDo(text) {
  const li = document.createElement("li");
  //writing no.6
  //document.createElement는 현 html에 없는 테그,클래스를 생성해준다.
  //button의 영역을 설정해주고 그 영역에 이모지를 삽입하는 과정을 보여준다.
  const delbtn = document.createElement("button");
  const span = document.createElement("span");
  const newId = toDos.length + 1;
  delbtn.innerHTML = "❌";
  span.innerText = text;
  li.appendChild(delbtn);
  li.appendChild(span);
  li.id = newId;
  toDoList.appendChild(li);
  const toDoObj = {
    text: text,
    id: newId,
  };
  toDos.push(toDoObj);
  saveTodos();
}
//투두 오브젝트(Id를 생성)를 굳이 하는 이유는 local storage에도 저장해야 하기 때문이다.

function handleSubmit(event) {
  event.preventDefault();
  const currentValue = toDoInput.value;
  paintToDo(currentValue);
  toDoInput.value = "";
}

function loadToDos() {
  const loadedtoDos = localStorage.getItem(TODOS_LS);
  // writeing no.3
  if (loadedtoDos !== null) {
    console.log(loadedToDos);
    const parsedToDos = JSON.parse(loadedToDos);
    console.log(parsedToDos);
  }
}
// writing no.4

function init() {
  loadToDos();
  toDoForm.addEventListener("submit", handleSubmit);
  // writing no.5
}

init();

// init();
// function init() {
//     loadToDos();
// writing no.2
